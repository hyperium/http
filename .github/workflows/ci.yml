name: CI
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1

jobs:

  test:
    name: Test ${{ matrix.os }}-${{ matrix.rust }}
    #needs: [style]
    strategy:
      matrix:

        os: [ubuntu-latest]
        rust:
          - stable
          - beta
          - nightly
          # When updating this value, don't forget to also adjust the
          # `rust-version` field in the `Cargo.toml` file.
          - 1.49.0

        include:
          - rust: nightly
            benches: true
          # Add testing for the nightly toolchain on windows to test debugger_visualizer support.
          - rust: nightly
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Test all benches
        if: matrix.benches
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --benches ${{ matrix.features }}

    # The #[debugger_visualizer] attribute is currently gated behind an unstable feature flag.
    # In order to test the visualizers for the http crate, they have to be tested on a nightly build.
      - name: Run tests with debugger_visualizer feature
        if: |
          matrix.os == 'windows-latest' &&
          matrix.rust == 'nightly'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --test debugger_visualizer --features 'debugger_visualizer' -- --test-threads=1

  wasm:
    name: WASM
    #needs: [style]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target wasm32-unknown-unknown


